<?php

use Drupal\block_content\BlockContentInterface;
use  \Drupal\Core\Form\FormStateInterface;

function webspark_blocks_theme_suggestions_block_alter(array &$suggestions, array $variables) {

  // Block suggestions for custom block bundles.
  if (isset($variables['elements']['content']['#block_content'])
    && $variables['elements']['content']['#block_content'] instanceof BlockContentInterface) {
    $bundle = $variables['elements']['content']['#block_content']->bundle();
    $view_mode = strtr($variables['elements']['#configuration']['view_mode'], '.', '_');
    $suggestions[] = 'block__' . $bundle;
    $suggestions[] = 'block__' . $bundle . '__' . $view_mode;
    $suggestions[] = 'block__inline_block__' . $bundle;
  }
}

function webspark_blocks_form_block_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  _webspark_blocks_title($form);
}

function webspark_blocks_form_layout_builder_add_block_alter(&$form, FormStateInterface $form_state, $form_id) {
  _webspark_blocks_title($form);
}

function _webspark_blocks_title(&$form){
  $form['settings']['label_display']['#default_value'] = FALSE;
  $form['settings']['label']['#title'] = t('Block admin title');
}

/**
 * Implements hook_page_attachments().
 */
function webspark_blocks_page_attachments(array &$attachments) {
  $attachments['#attached']['library'][] = 'webspark_blocks/webspark_blocks';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function webspark_blocks_preprocess_input__submit(&$variables) {
  $variables['attributes']['class'][] = 'btn-maroon';
}

function webspark_blocks_theme($existing, $type, $theme, $path){
  return [
    'webspark_blocks__back-to-top' => [],
    'webspark_blocks_anchor_menu' => [
      'variables' => [],
    ],
  ];
}

/**
 * Implements hook_form_alter().
 */
function webspark_blocks_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  $form_ids = ['layout_builder_update_block', 'layout_builder_add_block'];

  // Alter only the layout builder blocks.
  if (!in_array($form_id, $form_ids)) {
    return;
  }

  $form['settings']['block_form']['#process'][] = '_webspark_blocks_hero_block_form_alter';
}

/**
 * Process callback for hero custom block form.
 */
function _webspark_blocks_hero_block_form_alter(array $element, FormStateInterface $form_state) {
  // Hide the text field in the small heros.
  if (isset($element['field_hero_unformatted_text']) && isset($element['field_hero_size'])) {
    $element['field_hero_unformatted_text']['#states'] = [
      'invisible' => [
        'select[name="settings[block_form][field_hero_size]"]' => ['value' => 'sm']
     ]
    ];
  }

  return $element;
}
